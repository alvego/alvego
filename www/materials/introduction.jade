//- title: Введение
extends _root_/layout

block content
 h3 
   u Введение
 h4 Web, протокол http, URL, TCI/IP, технология Client/Server.  
 p
   b &nbsp Сеть передачи данных - 
   это совокупность различного программно-аппаратного оборудования, соединенного каналами связи.
 p &nbsp Сеть предназначена для передачи данных.
 p &nbsp Данными может быть любая информация: текст, изображение, голос, видео и т.д.
 p &nbsp Оборудование, используемое в сети можно разделить на три категории:
 ul
    li Клиентское оборудование (
       i Клиент
       ) - рабочая станция (персональный компьютер), ноутбук, телефон, телевизор... Т.е.   любое устройство, которое может сформировать по команде пользователя или автоматически, запрос на получение      информации из сети, получить ответ на свой запрос и отобразить полученную информацию в вид, доступный для потребителя информации.
    li Серверное оборудование (
       i Серверы
       ) - это своего рода хранилища данных, которые получают запросы от Клиентов на получение нужной им информации, формируют и отправляют Клиентам ответы на их запросы или передают информацию другим Серверам для хранения или для передачи другим Клиентам.
    li Сетевое Оборудование - оборудование, которое обеспечивает передачу информации по сети между Клиентами и Серверами, и собственно сами каналы связи.
 p
 p
 h5 
    u Технология клиент-сервер
 p &nbsp В общем случае сеть работает так:
 p &nbsp Клиент готовит запрос на какой-нибудь Сервер и передает его Cетевому Оборудованию. Сетевое Оборудование обеспечивает доставку по сети этого запроса до указанного Сервера. Сервер, получив запрос, готовит на него ответ и затем отправляет его Клиенту. Клиент, получив ответ, преобразует его в вид, доступный конечному пользователю.
 p &nbsp Такой механизм обмена информацией называется 
   u "технологией клиент-сервер"
   .
 p &nbsp При работе по технологии клиент-сервер Клиент является инициатором передачи данных и может сделать запрос, когда ему вздумается. В перерывах между запросами Клиент может быть вообще выключенным. Сервер же, напротив, должен быть включен всегда и должен постоянно "слушать" сеть - нет ли для него нового запроса от какого-нибудь Клиента.
 p
 p
 h5 
   u Что такое IP-адрес и зачем он нужен.
 p &nbsp Адреcация в сети Интернет организована очень просто. Каждой точке подключения любого устройства к сети (интерфейсу), присваивается уникальный номер, который и называют – 
   u IP-адресом
   .
 p &nbsp Для программно-аппаратных устройств IP-адрес это просто целое число для хранения которого выделяется ровно 4 байта памяти. Т.е. число в диапазоне от 0 до 4294967295. Человеку запоминать такие громоздкие числа сложно. Поэтому для наглядности, IP-адрес записывается в виде последовательность четырех чисел разделенных точками в диапазоне от 0.0.0.0 до 255.255.255.255. Каждое из этих четырех чисел соответствует значению отдельно каждого байта из тех четырех, в котором хранится все число.
 p &nbsp Количество IP-адресов (размер) в любой подсети всегда должно быть кратно степени числа 2. То есть – 4, 8, 16, 32 и т.д.Других размеров подсетей быть не может. Причем, первым адресом подсети должен быть такой адрес, последнее (из четырех) чисел которого должно делиться без остатка на размер сети.
 Для сокращения и упрощения описания подсетей, существует понятие 
 u «маска подсети»
 . Маска указывает на размер подсети и может быть описана двумя вариантами записи – коротким и длинным.
 Например, описать подсеть, размером 4 адреса, начинающейся с адреса 80.255.147.32 с помощью маски можно следующими вариантами:
 lu
    li Короткий – 
       b 80.255.147.32/30
    li Длинный – сеть 
       b 80.255.147.32
       , маска 
       b 255.255.255.252
 p
 b 
   i Подробнее на сайте: 
     | 
     a(href="http://paulnn.ru/", target="_blank") http://paulnn.ru/
 h5 
   u HTTP протокол
 p 
  u HTTP 
  — протокол прикладного уровня передачи данных (изначально — в виде гипертекстовых документов). 
 p &nbsp Основой HTTP является технология «клиент-сервер», то есть предполагается существование потребителей (клиентов), которые инициируют соединение и посылают запрос, и поставщиков (серверов), которые ожидают соединения для получения запроса, производят необходимые действия и возвращают обратно сообщение с результатом.
 p HTTP используется также в качестве «транспорта» для других протоколов прикладного уровня, таких как SOAP, XML-RPC, WebDAV.
 p &nbsp Основным объектом манипуляции в HTTP является ресурс, на который указывает URI(англ. 
  i Uniform Resource Identifier
  ) в запросе клиента. Обычно такими ресурсами являются хранящиеся на сервере файлы, но ими могут быть логические объекты или что-то абстрактное. 
 p &nbsp Особенностью протокола HTTP является возможность указать в запросе и ответе способ представления одного и того же ресурса по различным параметрам: формату, кодировке, языку и т. д. В частности для этого используется HTTP-заголовок. Именно благодаря возможности указания способа кодирования сообщения клиент и сервер могут обмениваться двоичными данными, хотя данный протокол является текстовым.
 p 
  u HTTP 
  — протокол прикладного уровня, аналогичными ему являются 
  u FTP 
  и 
  u SMTP
  . Обмен сообщениями идёт по обыкновенной схеме «запрос-ответ». 
 p &nbsp Для идентификации ресурсов HTTP использует глобальные URI. В отличие от многих других протоколов, HTTP не сохраняет своего состояния. Это означает отсутствие сохранения промежуточного состояния между парами «запрос-ответ». Компоненты, использующие HTTP, могут самостоятельно осуществлять сохранение информации о состоянии, связанной с последними запросами и ответами (например, «куки» на стороне клиента, «сессии» на стороне сервера). Браузер, посылающий запросы, может отслеживать задержки ответов. Сервер может хранить IP-адреса и заголовки запросов последних клиентов. Однако сам протокол не осведомлён о предыдущих запросах и ответах, в нём не предусмотрена внутренняя поддержка состояния, к нему не предъявляются такие требования.
 p 
  u Куки 
  — небольшой фрагмент данных, отправленный веб-сервером и хранимый на компьютере пользователя, который веб-клиент (обычно веб-браузер) каждый раз пересылает веб-серверу в HTTP-запросе при попытке открыть страницу соответствующего сайта. Применяется для сохранения данных на стороне пользователя
 p 
  u Сессии  
  — открываются на сервере, используют переменные, которые сохраняются при работе с сайтом.
 p 
 b 
   i Подробнее на сайте: 
   | 
   a(href="http://www.w3.org/Protocols/", target="_blank") http://www.w3.org/Protocols/
 