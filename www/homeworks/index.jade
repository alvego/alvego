//- title: Задания
extends _root_/layout

block content
    - var i = 1
    table.table.table-striped
        thead
            tr
                th #
                th Description
                th Example
                th Status
        tbody
            tr
                td D#{i++}
                td Сделать 2 дива, с заливкой разных цветов, которые бы занимали все доступное место на странице, деля ее на 2 вертикальные колонки.
                td: a(href="http://jsfiddle.net/a3j99/1/") посмотреть на jsFiddle
                td: i.icon-ok
            tr
                td D#{i++}
                td Сделать горизонтальное меню (список ul, li), выровненное по центру страницы вертикально и горизонтально
                td: a(href="http://jsfiddle.net/sCQa5/28/") посмотреть на jsFiddle
                td: i.icon-ok
            tr
                td D#{i++}
                td
                    ol
                        li Зарегистрироваться на
                            |
                            a(href="https://github.com/signup/free", title="Регистрация аккаунта на github") github.com
                        li Создать свой репозиторий на github
                        li Пройти
                            |
                            a(href="http://try.github.com/levels/1/challenges/1") онлайн урок по git
                        li Установить себе
                            |
                            a(href="http://git-scm.com/") git
                            ul
                                li Разобраться как работают команды git (clone, add, commit, push, pull).
                                li Рекомендую почитать книгу
                                    |
                                    a(href="http://git-scm.com/book/ru") про git.
                                li Для тех кого пугает консоль, обратите внимание на программу
                                    |
                                    a(href="http://code.google.com/p/tortoisegit/") tortoisegit.
                        li Взять себе локально свой репозиторий с github (git clone ...)
                        li
                            p Сверстать страницу-заготовку для вашего сайта, с использованием CSS framework'a
                                |
                                a(href="http://twitter.github.com/bootstrap/index.html") Bootstrap
                            p Должно быть в наличии:
                                ul
                                    li
                                        code nav
                                        | - меню (горизонтальное или вертикальное), должно быть несколько пунктов, например:
                                        code Item1 | Item2 | Item3 | Item4
                                    li
                                        code header
                                        | - заголовок сайта (красиво, желательно с картинкой)
                                    li
                                        code layout
                                        | - колонки (основная и боковая для вертикального меню)
                                    li
                                        code article
                                        | - некий текст в основной колонке (для теста стилей)
                                    li
                                        code footer
                                        | - подвал (с вашим копирайтом)
                            p Все должно быть красиво оформлено:
                                ul
                                    li Bootstrap - колонки, меню и типографка
                                    li Заголовок, фон и общий дизайн страницы - ваши стили.
                            p Используйте HTML5 и jQuery
                        li Выложить результат вашей работы в ваш репозиторий на github
                        li Прислать мне на почту ссылку на ваш репозиторий
                td
                    p: a(href="https://github.com/alvego/alvego", title="ссылка на исходники данного сайта") посмотреть на github
                    p: a(href="http://jsfiddle.net/uNH4T/5/", title="пример верстки с использованием Bootstrap") посмотреть на jsFiddle
                td: i.icon-ok
            tr
                td D#{i++}
                td
                    ul
                        li Написать небольшой веб-сервер/сайт на nodejs.
                        li Веб-сервер должен уметь отдавать браузеру html, javascript, картинки и стили.
                        li На сайте должно быть несколько страниц/фрагментов html, которые должны подставляться в шаблон, как контент.
                        li Ваше задание D3 используйте в качестве шаблона/темы для сайта.
                        li Все ссылки (в том числе и в меню) должны быть рабочими.
                        li Должна быть корректная обработка ситуации, когда запрашиваемый файл не найден.
                        li Используйте репозиторий, который вы создали, когда делали D3.
                        li По выполнении работ, напишите мне на почту (пятница - крайний срок сдачи задания).
                        li Для успешной сдачи задания вы должны уметь объяснить ваш код.
                td: a(href="https://github.com/alvego/srv", title="ссылка на пример исходников D4 (без оформления)") посмотреть на github
                td: i.icon-ok
            tr
                td D#{i++}
                td
                    ul
                        li Почитать статью на wiki про
                            |
                            a(href="http://ru.wikipedia.org/wiki/Markdown") Markdown
                        li Посмотреть пример подключения
                            |
                            a(href="http://nodeguide.ru/doc/dailyjs-nodepad/node-tutorial-10/") Markdown в Nodejs
                        li Переписать код своего D4 таким образом, чтоб для статей использовался не HTML, a упрощенный синтаксис разметки Markdown
                        li Выложить изменения в тот же репозиторий, что и D4
                        li Зарегистрироваться на сайте
                            |
                            a(href="http://freedns.afraid.org/") DNS сервиса
                        li Зарегистрироваться на сайте
                            |
                            a(href="http://nic.ua/") регистратора доменных имен
                        li Зарегистрировать у регистратора домен в зоне
                            |
                            a(href="http://pp.ua/") "pp.ua"
                        li Добавить свой домен в панели DNS сервиса
                        li Зарегистрировать
                            |
                            a(href="http://nodester.com/") nodejs хостинг
                        li Прочитать про работу с хостингом
                        li Внести необходимые исправления в код своего D5
                        li Выложить свое D5 на хостинг и проверить работоспособность
                        li Связать свой домен и хостинг
                        li По окончании работ, прислать мне письмо с ссылками на свой сайт и репозиторий github
                td
                td: i.icon-ok

    h4 Индивидуальные задания
    table.table.table-striped
        thead
            tr
                th Task #
                th Task Name
                th Task Description
        tbody
            tr
                td T1
                td Верстка
                td
                    p Сверстать страничку по заданному макету
                    p Техническое задание
                    ul
                        li верстка резиновая
                        li стандартный режим рендеринга (Standard Mode)
                        li кросбразуерность: IE7 и выше, Opera 10 и выше, Firefox, Safari и Chrome последних версий
                        li CSS3 по максимуму
                        li используйте технику graceful degradation: там где не работают уголки/шрифты, пусть будет стандартное поведение
                        li весь контент должен быть доступен с отключенными картинками
                    p Макет
                        ul
                            li: a(href="task1.zip") zip-архив c psd файлом
                            li: a(href="task1.png") png картинка
            tr
                td T1.1
                td Верстка
                td
                   p Верстка сайта в своем индивидуальном проекте
            tr
                td T2
                td PROXY
                td
                    p Сделать на node.js простой прокси HTTP запросов с кешированием файлов на диске.
                    p Функциональные требования:
                    ol
                        li Файл должен называться proxy.js.
                        li
                            p Должны поддерживаться следующие аргументы командной строки:
                            p
                                code -p PORT
                                | - устанавливает порт, который слушает PROXY сервер, 8080 если не указано
                            p
                                code -d PATH
                                | - устанавливает директорию, в которую PROXY сервер сохраняет файлы,
                                | поддиректория cache текущей директории, если не указано.
                            p Аргументы могут задаваться в произвольном порядке и быть разделены произвольным количеством пробелов.
                        li Формат кеширования в директории cache следующий:
                            ul
                                li имена доменов на первом уровне
                                li далее путь повторяет путь к запрашиваемым файлам
                                li имя файла index.html по умолчанию, _ вместо ?, затем отсортированные
                                    br
                                    | get параметры с экранированными (URLEncode - %..%..) спецсимволами (\/:?)
                            p Например:
                            pre.
                                http://example.com/test/?q=1#asdf
                                cache/
                                    example.com/
                                        test/
                                            index.html_q=1
                        li Proxy всегда возвращает файлы из дискового кеша, если они есть.

                    p Нефункциональные требования
                        ol
                            li Код программы должен быть проверен JSLint
                            li Код должен быть составлен на node.js
                            li Методы должны быть закоментарены в формате JSDoc
                            li Программа должна сопровождаться тестами с использованием nodeunit
            tr
                td T3
                td Система учета задач
                td: p Написать систему учета задач с использованием ASP MVC 3, Razor, Code-First.
            tr
                td T3.1
                td Чат на C#
                td
                   p Написать небольшой чат на С#.
                   p Разместить его на сервере и прислать нам URL на тестирование.
                   p Отдельно приаттачить файлы с кодом.
                   p Функциональность чата самая стандартная: возможность задать имя пользователя, отправить сообщение, просмотреть ленту сообщений.
                   p Оформить можно с использованием библиотеки bootstrap.
            tr
                td T3.2
                td Ajax Чат
                td: p Ajax чат с использованием Zend Framework 2.0 и REST.
            tr
                td T3.3
                td RSS агрегатор
                td: p С использованием Zend Framework 2.0 написать агрегатор новостей (из различных RSS лент).
            tr
                td T3.4
                td Онлайн урок по MVC 3.0
                td
                    p сделать страничку с онлайн уроком по MVC 3.0.
                    p Содержимое урока написать самостоятельно, почитав предварительно про MVC 3.0.
                    p К уроку нужно добавить галерею со скриншотами и lightbox (можно использовать готовые решения).
            tr
                td T3.5
                td OpenID регистрация
                td: p На Zend Framework 2.0 сделать регистрацию пользователей на своем сайте с использованием OpenID.
            tr
                td T3.6
                td Игра Lines в браузере
                td
                    p Нужно написать игру Lines, которая будет работать в браузере.
                    p Нужно использовать adaptive или responsive design.
                    p В браузере на компьютере на страничке с игрой показать сайдбар (например, с подсчетом очков) и верхнее выпадающее меню с несколькими опциями.
                    p На iPad - без сайдбара, всё в одну колонку.
                    p На iPhone - в одну колонку и вместо выпадающего меню показывать сразу раскрытое.
